name: Python Library CI

on:
  push:
    branches: [ $default-branch ]
    tags: *
  pull_request:
    branches: [ $default-branch ]

jobs:
  build:
    if: startsWith(github.ref, 'refs/head/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test
        run: |
          pytest
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build and publish
        run: |
          python setup.py bdist_wheel sdist
      - name: set up jfrog cli
        uses: jfrog/setup-jfrog-cli@v1
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_TOKEN_1 }}
      - name: Upload artifact to jfrog
        run: |
          zip -r ${{ github.event.repository.name }}-${{ github.event.inputs.tag }}.zip dist/*
          jfrog rt u ${{ github.event.repository.name }}-${{ github.event.inputs.tag }}.zip pypi.coralogix.net/